/*
    This file is part of CBF.

    CBF is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.

    CBF is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CBF.  If not, see <http://www.gnu.org/licenses/>.


    Copyright 2009, 2010 Florian Paul Schmidt
*/

//! controller.hxx (and controller.cxx) is autogenerated by XSD (see docs)
#include <schemas.hxx>

#include <memory>
#include <stdexcept>
#include <iostream>
#include <fstream>

int main(int argc, char *argv[]) {
	if (argc < 2)
		throw std::runtime_error("Error:\n  Missing argument: Please specify an XML document describing a controller.\n  Usage: test_xsd_output <filename>");
	try
	{
		//! Try to create a ControllerType from the passed XML document
		std::unique_ptr<ControlBasisType> controller (
			ControlBasis(
				argv[1], 
				xml_schema::flags::dont_validate
			)
		);

		std::cout << *controller.get() << std::endl;


#if 0
		std::unique_ptr<ResourceType> resource(
			Resource(
				argv[2], xml_schema::flags::dont_validate
			)
		);
#endif
	}
	catch (const xml_schema::exception& e)
	{
		std::cerr << "Something went wrong instantiating the controller(s): Reason: \n" << e << std::endl;

		//! Rethrow the exception, so a debugger might catch it :)
		throw;
	}
}


